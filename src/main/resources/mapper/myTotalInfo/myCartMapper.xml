<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dao.myTotalInfo.MyCartDaoImpl">

	<!-- 장바구니에 담긴 상품 개수 확인 -->
	<select id="cartCount" resultType="int" >
	/* myCartMapper.cartCount */
		SELECT COUNT(*)
		  FROM CART
		 WHERE CS_NO = #{csNo}
		   AND GD_NO = #{gdNo}
	</select>
	
	<!-- 장바구니에 물건이 없으면 insert -->
	<insert id="insertCart">
	/* myCartMapper.insertCart */
	INSERT INTO CART
		 VALUES (
		 		CART_SEQ.nextval
		 	 	,#{csNo}
		 		,#{gdNo}
		 		,#{gdQty}
		 )
	</insert>
	
	<!-- 장바구니에 물건이 있으면 update -->
	<update id="updateCart">
	/* myCartMapper.updateCart */
		UPDATE CART
		   SET GD_QTY = #{gdQty}
		 WHERE CS_NO = #{csNo}
		   AND GD_NO = #{gdNo}
	</update>
	
	<!-- 장바구니 목록 가져오기 -->
	<select id="getCartList" resultType="com.vo.cart.CartListVO" >
	/* myCartMapper.getCartList */
		SELECT AA.* 
		 FROM(
				SELECT 
					C.CART_NO
					,C.CS_NO 
					,C.GD_QTY 
					,GI.GD_NO
					,GI.GD_NM 
					,GI.GD_SP 
					,GI.GD_IMG 
					,GI.GD_PRICE
				FROM CART C 
				JOIN GOODS_INFO GI
				ON GI.GD_NO = C.GD_NO 
			) AA
		WHERE AA.CS_NO = #{csNo}
	</select>
	
	<!-- 장바구니 목록 삭제 -->
	<delete id="delCart">
	/* myCartMapper.delCart */
		DELETE 
		 FROM(
				SELECT 
					 C.CART_NO
					,C.CS_NO 
					,C.GD_QTY 
					,GI.GD_NO
					,GI.GD_NM 
					,GI.GD_SP 
					,GI.GD_IMG 
					,GI.GD_PRICE
				FROM CART C 
				JOIN GOODS_INFO GI
				ON GI.GD_NO = C.GD_NO 
				) AA
		WHERE AA.CS_NO = #{csNo}
		AND AA.GD_NO = #{gdNo}
	</delete>
	
	<!-- 고객번호로 고객 정보 가져오기 -->
	<select id="getCsInfo" resultType="com.vo.login.JoinVO">
	/* myCartMapper.getCsInfo */
		SELECT 
			 CS_NM <!-- 고객이름 -->
			,CS_ADDR_ONE <!-- 주소 -->
			,CS_ADDR_TWO <!-- 상세주소 -->
			,CS_PHONE <!-- 전화번호 -->
			,CS_EMAIL <!-- 이메일 -->
		FROM CUSTOMER_INFO
		WHERE CS_NO = #{csNo}
	</select>

	<!-- 구매버튼 눌렀을 때 주문정보테이블에 입력 -->
	<insert id="insOdrInfo" >
	/* myCartMapper.insOdrInfo */
	INSERT INTO ORDER_INFO 
	(SELECT 			
		T.OD_NO
		,T.CS_NO
		,REGEXP_SUBSTR(T.GD_NO, '[^,]+', 1, Level) AS GD_NO
		,REGEXP_SUBSTR(T.GD_QTY, '[^,]+', 1, Level) AS GD_QTY	
		,REGEXP_SUBSTR(T.OD_AMT, '[^,]+', 1, Level) AS OD_AMT 			
		,T.OD_DATE
		,T.RC_STATE
		,T.RC_NM
		,T.RC_PHONE
		,T.RC_EMAIL
		,T.RC_ADDR_ONE
		,T.RC_ADDR_TWO
	FROM (
		SELECT 
			 #{odNo} AS OD_NO
			,#{csNo} AS CS_NO
			,#{gdNo} AS GD_NO
			,#{gdQty} AS GD_QTY
			,#{odAmt} AS OD_AMT
			,SYSDATE AS OD_DATE
			,'100' AS RC_STATE
			,#{rcNm} AS RC_NM
			,#{rcPhone} AS RC_PHONE
			,#{rcEmail} AS RC_EMAIL
			,#{rcAddrOne} AS RC_ADDR_ONE
			,#{rcAddrTwo} AS RC_ADDR_TWO
		FROM DUAL
	)T 		
	WHERE T.OD_AMT IS NOT NULL 		
	CONNECT BY LEVEL <![CDATA[<=]]> REGEXP_COUNT(T.OD_AMT, '[^,]+') 		
	AND PRIOR T.OD_NO  = T.OD_NO 		
	AND PRIOR DBMS_RANDOM.VALUE IS NOT NULL)
	</insert>
    
</mapper>